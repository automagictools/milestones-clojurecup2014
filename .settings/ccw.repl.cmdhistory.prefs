cmdhistory=["(def stop (-main))" "(task-grammar \\"Task 1 is assigned to Ibtissem Hamdi\\")" "(task-grammar \\"Task 1 is to design a natural tasks specifier\\")" "(parse-constraint task-grammar)" "(insta/parse \\"S\=[prefix]<whitespace> task-id <whitespace> [postfix] <whitespace> task-name | \\n       [prefix] <whitespace> task-name <whitespace> [postfix] <whitespace> task-id\\n    <whitespace> \= \#'\\\\\\\\s+'\\n    <prefix> \= 'Task'|'task'|'The task'\\n    <postfix> \= 'is to'\\n    <number> \= \#'[0-9]+'\\n    <word> \= \#'[a-zA-Z-0-9-s]+'\\n    task-id \= number\\n    task-name \= word (<whitespace> word)*\\")" "(insta/parser \\"sentence \= task (<point> task)*\\n     <token> \= word | number\\n     <task> \= id + <whitespace> + user + <whitespace> + priority + <whitespace> + duration \\n     <point> \= \#'\\\\\\\\.+'\\n     <word> \= \#'[a-zA-Z]+'\\n     <number> \= \#'[0-9]+'\\n     <whitespace> \= \#'\\\\\\\\s+'\\n     id \= \#'[a-zA-Z-0-9]+'\\n     duration \= number + <whitespace> + word \\n     priority \= word | number\\n     user \= word\\"\\n              )" "(task-grammar  \\"task 1 is to design tasks specifier\\")" "(task-grammar  \\"The task 1 is to design tasks specifier\\")" "(resource-grammar \\"this task is assigned to Ibtissem Hamdi\\")" "(task-grammar  \\"The task 1 is to design tasks specifier\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier assigned to Ibtissem\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier. Task 2 is to develop WS\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier.Task 2 is to develop WS\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier.   Task 2 is to develop WS\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem.   Task 2 is to develop WS\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, duration 2d, with\\nhigh priority, these tasks 2 and 3 must be done first.\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, with\\n   high priority, duration 2d, these tasks 2 and 3 must be done first.\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, with high priority, duration 2d, these tasks 2 and 3 must be done first.\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, with a high priority, duration 2d, these tasks 2 and 3 must be done first.\\")" " (tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, \\nwith a high priority, duration 2d, \\nthese tasks 2 and 3 must be done first.\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, with a high priority, it takes 2d, these tasks 2 and 3 must be done first.\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, with high priority, it takes 2d, these tasks 2 and 3 must be done first.\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, priority high , it takes 2d, these tasks 2 and 3 must be done first.\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, it takes 2d, these tasks 2 and 3 must be done first.\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, it takes 2d, it depends on tasks 2 and 3.\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, it takes 2d\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, it takes 2d.\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem, it takes 2d. it depends on tasks 2\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem.\\")" "(tasks-specifier \\"The task 1 is to design tasks specifier, assigned to Ibtissem\\")" "(tasks-specifier \\"task 1, assigned to ibtissem\\")" "(tasks-specifier \\"task 1 is to design, assigned to ibtissem\\")" "(tasks-specifier \\"task 1 is to design\\")" "(lng-spec \\"task 1 is to design\\")" "(lng-spec \\"Task 1 is to design task specifier\\")" "(tasks-specifier \\"Task 1 is to design task specifier\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier,\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti,\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, by ibti,\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti,\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti, lasts 2d\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti, lasts 2d,\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti, lasts 2d, high priority\\")" "(map inc [[1 2 3] [ 2 3 4]])" "(map \#(mapv inc %) [[1 2 3] [ 2 3 4]])" "(mapcat\\n  \#(mapv inc %) [[1 2 3] [ 2 3 4]])" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti, lasts 2d,\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti, lasts 2d, priority low\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti, it takes 2 days, priority low\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti, it takes 2 days, priority low,\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti, it takes 2 days, priority low, 12 14 5\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti, it takes 2 days, priority low, it depends on tasks 12 14 5\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti, it takes 2 days, priority low, it depends on tasks 12 14 5. Task 2 is to design tasks specifier, assigned to rafik, it takes 2 days, with high priority, tasks 1 & 3 must be ended first. \\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, assigned to ibti, it takes 2 days, priority low, it depends on tasks 12 14 5. Task 2 is to design tasks specifier, assigned to ibti, it takes 2 days, priority low, it depends on tasks 1.\\")" "(print \\"ping\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, it is assigned to ibtissem, it takes 2 days, its priority is low. Task 2 is to design a dynamic scheduler, assigned to Rafik, it takes 2 days, priority high, it depends on tasks 1. Task 3 is to draw a gantt diagramm, it is attributed to Marwa, it lasts 2 days, with a high priority, it depends on tasks 1 & 2.\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, it is assigned to ibtissem, it takes 2 days, its priority is low. Task 2 is to design a dynamic scheduler, assigned to Rafik, it takes 2 days, priority high, it depends on tasks 1.\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, it is assigned to ibtissem\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, it is assigned to ibtissem.\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, it is assigned to ibtissem\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier it is assigned to ibtissem\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, it is assigned to ibtissem\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, it is assigned to ibtissem, with a low priority\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, it is assigned to ibtissem, with a low priority, it lasts 2 days\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, it is assigned to ibtissem, it lasts 2 days, with a low priority\\")" "(tasks-specifier \\"Task 1 is to design tasks specifier, it is assigned to ibtissem, it lasts 2 days, with a low priority, depends on tasks 1 2 3\\")" "([1 2 3] 0)" "(tasks-specifier \\"task 1 is about Developpng app, must be done by Rafik\\")" "(formatted-tasks \\"task 1 is about Developpng app, must be done by Rafik\\")" "(formatted-tasks \\"task 1 is about Developpng app  must be done by Rafik\\")" "(formatted-tasks \\"task 1 is about Developpng app\\")" "task 1 is about Developpng app," "(formatted-tasks \\"task 1 is about Developpng app, \\")" "(formatted-tasks \\"task 1 is about Developpng app, must be done by Rafik\\")" "(formatted-tasks \\"done by 1\\")" "(formatted-tasks \\"Task 1 is to design tasks specifier, it is assigned to ibtissem, it takes 2 days, its priority is low.\\")" "(formatted-tasks \\"Task 1 is to design tasks specifier, it is assigned to ibtissem.\\")" "(formatted-tasks \\"Task 1 is to design tasks specifier, it is assigned to ibtissem.Task 2 is to design tasks specifier, it is assigned to ibtissem\\")" "(formatted-tasks \\"Task 1 is to design tasks specifier, assigned to ibtissem.Task 2 is to design tasks specifier, it is assigned to ibtissem\\")" "(formatted-tasks \\"Task 1 is to design tasks specifier, assigned to ibtissem, lasts 2 days\\")" "(formatted-tasks \\"Task 1 is to design tasks specifier, assigned to ibtissem, lasts 2 days, priority low\\")" "(formatted-tasks \\"Task 1 is to design tasks specifier, assigned to ibtissem, lasts 2 days, priority low, depends on 1 2 3\\")" "(formatted-tasks \\"Task 1 is to design tasks specifier, assigned to ibtissem, lasts 2 days, priority low, depends on tasks 1 2 3\\")" "[\:S [\:task [\:description [\:task-id \\"1\\"] [\:task-name \\"design\\"]] [\:resource [\:resource-name \\"ibti\\"]] ]]" "(def list [\:S [\:task [\:description [\:task-id \\"1\\"] [\:task-name \\"design\\" \\"tasks\\" \\"specifier\\"]] [\:resource [\:resource-name \\"ibtissem\\"]] [\:duration [\:duration-value \\"2\\"] [\:duration-unity \\"days\\"]] [\:priority \\"low\\"] [\:predecessors \\"1\\" \\"2\\" \\"3\\"]]])" "(def stop-app (-main))" "(-main)" "(defn stop-app (-main))" "(-main)" "(defn stop-app (-main))" "(-main)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(defn stop-app (-main))" "(def stop-app (-main))" "(defn stop-app (-main))" "(-main)" "(defn stop-app (-main))" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(defn stop-app (-main))" "(-main)" "(defn stop (-main))" "(-main)" "(defn stop (-main))" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(defn stop-app (-main))" "(-main)" "(defn stop-app (-main))" "(-main)" "(defn stop-app (-main))" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" " (stop-app)" " (def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app) (def stop-app (-main))" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(formatted-tasks \\"Task 1 is to\\")" "(formatted-tasks {\\"tasks\\" \\"Task 1 is to\\"})" " (formatted-tasks {\\"tasks\\" \\"Task 1 is to\\"})" "(formatted-tasks {\\"tasks\\" \\"Task 1 is to\\"})" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(use 'clojure.core.logic)" "(stop-app)" "(def stop-app (-main))" "(\\"$nbsp;\\" * 9)" "(* \\"$nsbsp\\" 8)" "(for [x [14 15 15]] x)" "(reduce \#(str(\\"<li>%</li>)\\") [\\"a\\" \\"b\\" \\"c\\"]))" "(reduce \#(str(%)) [\\"a\\" \\"b\\" \\"c\\"])" "(reduce str [\\"a\\" \\"b\\" \\"c\\"])" "(reduce \#(%) [\\"a\\" \\"b\\" \\"c\\"])" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(main {1 {\:task-name \\"T1\\" \:resource-id \\"Marwa\\" \:duration 2 \:begin 1}})" "(main {1 {\:task-name \\"task to mawa\\" \:resource-id \\"marwa\\" \:begin 1 \:duration 3}})" "(def stop-app (-main))" "(all-tasks-to-sched [\:S [\:task [\:description [\:task-id \\"1\\"] [\:task-name \\"design\\" \\"tasks\\" \\"specifier\\"]] [\:resource [\:resource-name \\"ibtissem\\"]] [\:duration [\:duration-value \\"2\\"] [\:duration-unity \\"days\\"]] [\:priority \\"low\\"] [\:predecessors \\"1\\" \\"2\\" \\"3\\"]]])" "9" "(all-tasks-to-sched [\:S [\:task [\:description [\:task-id \\"1\\"] [\:task-name \\"design\\" \\"tasks\\" \\"specifier\\"]] [\:resource [\:resource-name \\"ibtissem\\"]] [\:duration [\:duration-value \\"2\\"] [\:duration-unity \\"days\\"]] \\n                         [\:priority \\"low\\"] [\:predecessors \\"1\\" \\"2\\" \\"3\\"]]])" "(stop-app)" "(def stop-app (-main))" "(stop-app) \\n(def stop-app (-main))" "(-main)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(stop-app)" "(def stop-app (-main))" "(milestones.gantt/main {1 {\:task-name \\"Design\\" \:resource-id \\"Ibti\\" \:duration 2 \:priority 5  }\\n                        2 {\:task-name \\"Dev\\" \:resource-id \\"Raf\\" \:duration 2 \:priority 1  }\\n                        3 {\:task-name \\"Integration\\" \:resource-id \\"Marwa\\" \:duration 2 \:priority 1  }\\n                        })" "(milestones.gantt/main {1 {\:task-name \\"Design\\" \:resource-id \\"Ibti\\" \:duration 2 \:priority 5 \:begin 1 }\\n                           2 {\:task-name \\"Dev\\" \:resource-id \\"Raf\\" \:duration 2 \:priority 1 \:begin 4 }\\n                           3 {\:task-name \\"Integration\\" \:resource-id \\"Marwa\\" \:duration 2 \:priority 1 \:begin 5}\\n                           })" "(milestones.gantt/main {1 {\:task-name \\"Design\\" \:resource-id \\"Ibti\\" \:duration 2 \:priority 5 \:begin 1 }\\n                              2 {\:task-name \\"Dev\\" \:resource-id \\"Raf\\" \:duration 2 \:priority 1 \:begin 4 }\\n                              3 {\:task-name \\"Integration\\" \:resource-id \\"Marwa\\" \:duration 2 \:priority 1}\\n                              })" "(milestones.gantt/main {1 {\:task-name \\"Design\\" \:resource-id \\"Ibti\\" \:duration 2 \:priority 5 \:begin 1 }\\n                                 2 {\:task-name \\"Dev\\" \:resource-id \\"Raf\\" \:duration 2 \:priority 1 \:begin 4 }\\n                                 3 {\:task-name \\"Integration\\" \:resource-id \\"Marwa\\" \:duration 2 \:priority 1}\\n                                 })" "(milestones.gantt/main {1 {\:task-name \\"Design\\" \:resource-id \\"Ibti\\" \:duration 2 \:priority 5 \:begin 1 }\\n                                 2 {\:task-name \\"Dev\\" \:resource-id \\"Raf\\" \:duration 2 \:priority 1 \:begin 4 }\\n                                 3 {\:task-name \\"Integration\\" \:resource-id \\"Marwa\\" \:duration 2 \:priority 1 \:begin 2}\\n                                 })" "(nil? v (print true))" "(nil? v (print true)\\n      false\\n      )" "(if v (print true))" "(if (nil?     v) true )" "(if (nil? input-argument) \\"use default argument\\" input-argument)" "(if (nil? b) \\"use default argument\\" b)" "(def vv {\:start 1})" "(if (nil? (vv \:begin)) \\"use default argument\\")" "(if (nil? (vv \:begin)) \\"use default argument\\" true)" "(if (nil? (vv \:start)) \\"use default argument\\" true)" "(milestones.gantt/main {1 {\:task-name \\"Design\\" \:resource-id \\"Ibti\\" \:duration 2 \:priority 5 \:begin 1 }\\n                                    2 {\:task-name \\"Dev\\" \:resource-id \\"Raf\\" \:duration 2 \:priority 1 \:begin 4 }\\n                                    3 {\:task-name \\"Integration\\" \:resource-id \\"Marwa\\" \:duration 2 \:priority 1}\\n                                    })" "(assoc [\\"A\\" \\"B\\" 3] \\"A\\" \:a)" "(replace [\\"A\\" \\"B\\" \\"C\\"] \#'A' \\"Test\\")" "(replace [\\"A\\" \\"B\\" \\"C\\"] '\\"A\\" \\"Test\\")" " (replace [\\"A\\" \\"B\\" \\"C\\"] \\"A\\" \\"Test\\")" "(clojure.string/replace \\"The color is red\\" \#\\"red\\" \\"blue\\")" "(clojure.string/replace \\"[0-9]+ [0-9]\\" \#\\"[0-9]\\" \\"Number\\")" "(clojure.string/replace \\"[0-9]\\" \#\\"[0-9]\\" \\"Number\\")" "(clojure.string/replace \\"[0-9]+ [0-9]\\" \#\\"[[0-9]]\\" \\"Number\\")" "(stop-app)" "(def stop-app (-main))"]
eclipse.preferences.version=1
